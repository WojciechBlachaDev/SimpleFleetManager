<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--#region Icons-->
    <PathGeometry x:Key="CloseIcon" Figures="M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z" />

    <PathGeometry x:Key="OkIcon" Figures="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z" />

    <PathGeometry x:Key="PlusIcon" Figures="M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z" />

    <PathGeometry x:Key="EditIcon" Figures="M5,3C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V12H19V19H5V5H12V3H5M17.78,4C17.61,4 17.43,4.07 17.3,4.2L16.08,5.41L18.58,7.91L19.8,6.7C20.06,6.44 20.06,6 19.8,5.75L18.25,4.2C18.12,4.07 17.95,4 17.78,4M15.37,6.12L8,13.5V16H10.5L17.87,8.62L15.37,6.12Z" />

    <PathGeometry x:Key="TrashIcon" Figures="M9,3V4H4V6H5V19A2,2 0 0,0 7,21H17A2,2 0 0,0 19,19V6H20V4H15V3H9M7,6H17V19H7V6M9,8V17H11V8H9M13,8V17H15V8H13Z" />


    <PathGeometry x:Key="DragIcon" Figures="M9,3H11V5H9V3M13,3H15V5H13V3M9,7H11V9H9V7M13,7H15V9H13V7M9,11H11V13H9V11M13,11H15V13H13V11M9,15H11V17H9V15M13,15H15V17H13V15M9,19H11V21H9V19M13,19H15V21H13V19Z" />


    <PathGeometry x:Key="VerticalDotMenuIcon" Figures="M0.45 2.72c0.25,0 0.46,0.2 0.46,0.45 0,0.25 -0.21,0.45 -0.46,0.45 -0.25,0 -0.45,-0.2 -0.45,-0.45 0,-0.25 0.2,-0.45 0.45,-0.45l0 0zm0 -1.36c0.25,0 0.46,0.2 0.46,0.45 0,0.25 -0.21,0.46 -0.46,0.46 -0.25,0 -0.45,-0.21 -0.45,-0.46 0,-0.25 0.2,-0.45 0.45,-0.45l0 0zm0 -1.36c0.25,0 0.46,0.2 0.46,0.45 0,0.25 -0.21,0.46 -0.46,0.46 -0.25,0 -0.45,-0.21 -0.45,-0.46 0,-0.25 0.2,-0.45 0.45,-0.45z" />


    <PathGeometry x:Key="SavePencilIcon" Figures="M4 19H10V21H4C2.89 21 2 20.1 2 19V5C2 3.9 2.89 3 4 3H16L20 7V9.12L18 11.12V7.83L15.17 5H4V19M14 10V6H5V10H14M20.42 12.3C20.31 12.19 20.18 12.13 20.04 12.13C19.9 12.13 19.76 12.19 19.65 12.3L18.65 13.3L20.7 15.35L21.7 14.35C21.92 14.14 21.92 13.79 21.7 13.58L20.42 12.3M12 19.94V22H14.06L20.12 15.93L18.07 13.88L12 19.94M14 15C14 13.34 12.66 12 11 12S8 13.34 8 15 9.34 18 11 18C11.04 18 11.08 18 11.13 18L14 15.13C14 15.09 14 15.05 14 15" />


    <PathGeometry x:Key="CancelIcon" Figures="M12 2C17.5 2 22 6.5 22 12S17.5 22 12 22 2 17.5 2 12 6.5 2 12 2M12 4C10.1 4 8.4 4.6 7.1 5.7L18.3 16.9C19.3 15.5 20 13.8 20 12C20 7.6 16.4 4 12 4M16.9 18.3L5.7 7.1C4.6 8.4 4 10.1 4 12C4 16.4 7.6 20 12 20C13.9 20 15.6 19.4 16.9 18.3Z" />

    <PathGeometry x:Key="CheckCircleIcon" Figures="M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2,4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z" />

    <PathGeometry x:Key="ArrowLeftIcon" Figures="M21,11H6.83L10.41,7.41L9,6L3,12L9,18L10.41,16.58L6.83,13H21V11Z" />

    <PathGeometry x:Key="MenuBurgerIcon" Figures="M3,6H21V8H3V6M3,11H21V13H3V11M3,16H21V18H3V16Z" />

    <PathGeometry x:Key="BackBurgerMenuIcon" Figures="M5,13L9,17L7.6,18.42L1.18,12L7.6,5.58L9,7L5,11H21V13H5M21,6V8H11V6H21M21,16V18H11V16H21Z" />
    <!--<PathGeometry x:Key=""
            Figures=""/>-->
    <!--<PathGeometry x:Key=""
            Figures=""/>-->
    <!--<PathGeometry x:Key=""
            Figures=""/>-->
    <!--<PathGeometry x:Key=""
            Figures=""/>-->
    <!--<PathGeometry x:Key=""
            Figures=""/>-->
    <!--<PathGeometry x:Key=""
            Figures=""/>-->
    <!--<PathGeometry x:Key=""
            Figures=""/>-->
    <!--#endregion-->
    <!--#region Fonts-->
    <Style x:Key="BaseStyle" TargetType="{x:Type Control}">
        <Setter Property="FontFamily" Value="\views\assets\fonts\saira\Saira-Regular.ttf#Saira Regular" />
    </Style>

    <Style x:Key="BaseTextButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="\views\assets\fonts\saira\Saira-Regular.ttf#Saira Regular" />
    </Style>

    <Style x:Key="BaseTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="\views\assets\fonts\saira\Saira-Regular.ttf#Saira Regular" />
    </Style>

    <Style x:Key="DescTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="\views\assets\fonts\saira\SairaCondensed-Regular.ttf#Saira Condensed Regular" />
    </Style>

    <Style x:Key="CondensedTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="\views\assets\fonts\saira\Saira-Regular.ttf#Saira Regular" />
    </Style>

    <Style x:Key="SemiBoldTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="\views\assets\fonts\saira\Saira-SemiBold.ttf#Saira SemiBold" />
    </Style>
    <!--#endregion-->
    <!--#region Colors-->
    <!--  Kolor tła sekcji na panelu (Neutralny)  -->
    <Color x:Key="PrimaryBackground">#242B33</Color>
    <SolidColorBrush x:Key="PrimaryBackgroundBrush" Color="{StaticResource PrimaryBackground}" />

    <!--  Kolor tła 2  -->
    <Color x:Key="SecoundaryBackground">#3B444F</Color>
    <SolidColorBrush x:Key="SecoundaryBackgroundBrush" Color="{StaticResource SecoundaryBackground}" />

    <!--  Kolor tła 3  -->
    <Color x:Key="UnactiveBackground">#424B55</Color>
    <SolidColorBrush x:Key="UnactiveBackgroundBrush" Color="{StaticResource UnactiveBackground}" />

    <!--  Kolor foreground  -->
    <Color x:Key="NeutralForeground">#DEDEDE</Color>
    <SolidColorBrush x:Key="NeutralForegroundBrush" Color="{StaticResource NeutralForeground}" />

    <!--  Kolor foreground unactive  -->
    <Color x:Key="NeutralForegroundUnactive">#989B9E</Color>
    <SolidColorBrush x:Key="NeutralForegroundUnactiveBrush" Color="{StaticResource NeutralForegroundUnactive}" />

    <!--  Kolor Green  -->
    <Color x:Key="AcceptGreen">#28B368</Color>
    <SolidColorBrush x:Key="AcceptGreenBrush" Color="{StaticResource AcceptGreen}" />

    <!--  Kolor blue  -->
    <Color x:Key="DodgeBlue">#3CA2D2</Color>
    <SolidColorBrush x:Key="DodgeBlueBrush" Color="{StaticResource DodgeBlue}" />

    <Color x:Key="CloseRed">#EC6548</Color>
    <SolidColorBrush x:Key="CloseRedBrush" Color="{StaticResource CloseRed}" />

    <!--  Kolor border  -->
    <Color x:Key="WindowBorder">#222830</Color>
    <SolidColorBrush x:Key="WindowBorderBrush" Color="{StaticResource WindowBorder}" />
    <!--#endregion-->

    <!--#region Buttons-->
    <Style x:Key="CloseButtonIconStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource PrimaryBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource NeutralForegroundUnactiveBrush}" />
        <Setter Property="Width" Value="26" />
        <Setter Property="Height" Value="26" />
        <Setter Property="Margin" Value="10,0,5,15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="13">
                        <Path
                            Width="12"
                            Height="12"
                            Data="{StaticResource CloseIcon}"
                            Fill="{TemplateBinding Foreground}"
                            Stretch="Fill" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Foreground).(SolidColorBrush.Color)"
                                            From="{StaticResource NeutralForegroundUnactive}"
                                            To="{StaticResource CloseRed}"
                                            Duration="0:0:0.3" />
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)"
                                            From="{StaticResource PrimaryBackground}"
                                            To="{StaticResource SecoundaryBackground}"
                                            Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)"
                                            From="{StaticResource SecoundaryBackground}"
                                            To="{StaticResource PrimaryBackground}"
                                            Duration="0:0:0.3" />
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Foreground).(SolidColorBrush.Color)"
                                            From="{StaticResource CloseRed}"
                                            To="{StaticResource NeutralForegroundUnactive}"
                                            Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AddButtonIconStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource SecoundaryBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource AcceptGreenBrush}" />
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Margin" Value="0,9,15,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="15">
                        <Path
                            Width="18"
                            Height="18"
                            Data="{StaticResource PlusIcon}"
                            Fill="{TemplateBinding Foreground}"
                            Stretch="Fill" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Foreground).(SolidColorBrush.Color)"
                                            From="{StaticResource AcceptGreen}"
                                            To="Lime"
                                            Duration="0:0:0.3" />
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)"
                                            From="{StaticResource SecoundaryBackground}"
                                            To="{StaticResource PrimaryBackground}"
                                            Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Foreground).(SolidColorBrush.Color)"
                                            From="Lime"
                                            To="{StaticResource AcceptGreen}"
                                            Duration="0:0:0.3" />
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)"
                                            From="{StaticResource PrimaryBackground}"
                                            To="{StaticResource SecoundaryBackground}"
                                            Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SaveEditedItemButtonIconStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource SecoundaryBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource DodgeBlueBrush}" />
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Margin" Value="0,9,15,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="15">
                        <Path
                            Width="18"
                            Height="18"
                            Data="{StaticResource SavePencilIcon}"
                            Fill="{TemplateBinding Foreground}"
                            Stretch="Fill" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Foreground).(SolidColorBrush.Color)"
                                            From="{StaticResource DodgeBlue}"
                                            To="RoyalBlue"
                                            Duration="0:0:0.3" />
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)"
                                            From="{StaticResource SecoundaryBackground}"
                                            To="{StaticResource PrimaryBackground}"
                                            Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Foreground).(SolidColorBrush.Color)"
                                            From="RoyalBlue"
                                            To="{StaticResource DodgeBlue}"
                                            Duration="0:0:0.3" />
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)"
                                            From="{StaticResource PrimaryBackground}"
                                            To="{StaticResource SecoundaryBackground}"
                                            Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CancelButtonIconStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource SecoundaryBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource CloseRedBrush}" />
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Margin" Value="0,9,50,0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="15">
                        <Path
                            Width="13"
                            Height="13"
                            Data="{StaticResource CancelIcon}"
                            Fill="{TemplateBinding Foreground}"
                            Stretch="Fill" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Foreground).(SolidColorBrush.Color)"
                                            From="{StaticResource CloseRed}"
                                            To="Red"
                                            Duration="0:0:0.3" />
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)"
                                            From="{StaticResource SecoundaryBackground}"
                                            To="{StaticResource PrimaryBackground}"
                                            Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)"
                                            From="{StaticResource PrimaryBackground}"
                                            To="{StaticResource SecoundaryBackground}"
                                            Duration="0:0:0.3" />
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Foreground).(SolidColorBrush.Color)"
                                            From="Red"
                                            To="{StaticResource CloseRed}"
                                            Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="EditIconButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource PrimaryBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource NeutralForegroundUnactiveBrush}" />
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Margin" Value="5,0,5,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="15">
                        <Path
                            Width="12"
                            Height="12"
                            Data="{StaticResource EditIcon}"
                            Fill="{TemplateBinding Foreground}"
                            Stretch="Fill" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Foreground).(SolidColorBrush.Color)"
                                            From="{StaticResource NeutralForegroundUnactive}"
                                            To="{StaticResource DodgeBlue}"
                                            Duration="0:0:0.3" />
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)"
                                            From="{StaticResource PrimaryBackground}"
                                            To="{StaticResource SecoundaryBackground}"
                                            Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Foreground).(SolidColorBrush.Color)"
                                            From="{StaticResource DodgeBlue}"
                                            To="{StaticResource NeutralForegroundUnactive}"
                                            Duration="0:0:0.3" />
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)"
                                            From="{StaticResource SecoundaryBackground}"
                                            To="{StaticResource PrimaryBackground}"
                                            Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DeleteButtonIconStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource PrimaryBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource NeutralForegroundUnactiveBrush}" />
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Margin" Value="5,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="15">
                        <Path
                            Width="12"
                            Height="12"
                            Data="{StaticResource TrashIcon}"
                            Fill="{TemplateBinding Foreground}"
                            Stretch="Fill" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Foreground).(SolidColorBrush.Color)"
                                            From="{StaticResource NeutralForegroundUnactive}"
                                            To="{StaticResource CloseRed}"
                                            Duration="0:0:0.3" />
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)"
                                            From="{StaticResource PrimaryBackground}"
                                            To="{StaticResource SecoundaryBackground}"
                                            Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)"
                                            From="{StaticResource SecoundaryBackground}"
                                            To="{StaticResource PrimaryBackground}"
                                            Duration="0:0:0.3" />
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Foreground).(SolidColorBrush.Color)"
                                            From="{StaticResource CloseRed}"
                                            To="{StaticResource NeutralForegroundUnactive}"
                                            Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MenuItemButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{StaticResource NeutralForegroundUnactiveBrush}" />
        <Setter Property="Background" Value="{StaticResource UnactiveBackgroundBrush}" />
        <Setter Property="Width" Value="30" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Margin" Value="5,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="15">
                        <Path
                            Width="12"
                            Height="18"
                            Data="{StaticResource VerticalDotMenuIcon}"
                            Fill="{TemplateBinding Foreground}"
                            Stretch="Uniform" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Foreground).(SolidColorBrush.Color)"
                                            From="{StaticResource NeutralForegroundUnactive}"
                                            To="{StaticResource PrimaryBackground}"
                                            Duration="0:0:0.3" />
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)"
                                            From="{StaticResource UnactiveBackground}"
                                            To="{StaticResource NeutralForeground}"
                                            Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Foreground).(SolidColorBrush.Color)"
                                            From="{StaticResource PrimaryBackground}"
                                            To="{StaticResource NeutralForegroundUnactive}"
                                            Duration="0:0:0.3" />

                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)"
                                            From="{StaticResource NeutralForeground}"
                                            To="{StaticResource UnactiveBackground}"
                                            Duration="0:0:0.3" />

                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource UnactiveBackgroundBrush}" />
                            <Setter Property="Background" Value="{StaticResource SecoundaryBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToggleSliderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Content" Value="OFF" />
        <Setter Property="Background" Value="#333" />
        <Setter Property="BorderBrush" Value="{StaticResource NeutralForegroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource NeutralForegroundBrush}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Width="45" Height="22">
                        <Border
                            x:Name="rail"
                            Margin="6,4"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="{TemplateBinding Background}"
                            CornerRadius="8" />
                        <Border
                            x:Name="slider"
                            Width="20"
                            Height="20"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Stretch"
                            Background="{TemplateBinding BorderBrush}"
                            CornerRadius="10">
                            <Border.RenderTransform>
                                <TranslateTransform X="0" Y="0" />
                            </Border.RenderTransform>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">

                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="slider"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                            From="0"
                                            To="25"
                                            Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>

                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)"
                                            From="#333"
                                            To="{StaticResource AcceptGreen}"
                                            Duration="0:0:0.15" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="slider"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                            From="25"
                                            To="0"
                                            Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)"
                                            From="{StaticResource AcceptGreen}"
                                            To="#333"
                                            Duration="0:0:0.15" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            From="1"
                                            To="0.85"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            From="0.85"
                                            To="1"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource UnactiveBackgroundBrush}" />
                            <Setter Property="BorderBrush" Value="{StaticResource NeutralForegroundUnactiveBrush}" />
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="BackIconButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource SecoundaryBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource NeutralForegroundUnactiveBrush}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="15,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        CornerRadius="0">
                        <Path
                            Width="20"
                            Height="20"
                            Data="{StaticResource ArrowLeftIcon}"
                            Fill="{TemplateBinding Foreground}"
                            Stretch="Uniform" />

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Foreground).(SolidColorBrush.Color)"
                                            From="{StaticResource NeutralForegroundUnactive}"
                                            To="{StaticResource NeutralForeground}"
                                            Duration="0:0:0.3" />
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)"
                                            From="{StaticResource SecoundaryBackground}"
                                            To="{StaticResource PrimaryBackground}"
                                            Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Foreground).(SolidColorBrush.Color)"
                                            From="{StaticResource NeutralForeground}"
                                            To="{StaticResource NeutralForegroundUnactive}"
                                            Duration="0:0:0.3" />
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)"
                                            From="{StaticResource PrimaryBackground}"
                                            To="{StaticResource SecoundaryBackground}"
                                            Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MainMenuButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{StaticResource WindowBorderBrush}" />
        <Setter Property="Foreground" Value="{StaticResource NeutralForegroundUnactiveBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="10 0 0 0">
                        <Path
                            x:Name="MenuIcon"
                            Width="20"
                            Height="20"
                            Data="{StaticResource MenuBurgerIcon}"
                            Fill="{TemplateBinding Foreground}"
                            Stretch="Uniform" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="MenuIcon" Property="Data" Value="{StaticResource BackBurgerMenuIcon}" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Foreground).(SolidColorBrush.Color)"
                                            From="{StaticResource NeutralForegroundUnactive}"
                                            To="{StaticResource NeutralForeground}"
                                            Duration="0:0:0.3" />
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)"
                                            From="{StaticResource WindowBorder}"
                                            To="{StaticResource SecoundaryBackground}"
                                            Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Foreground).(SolidColorBrush.Color)"
                                            From="{StaticResource NeutralForeground}"
                                            To="{StaticResource NeutralForegroundUnactive}"
                                            Duration="0:0:0.3" />

                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)"
                                            From="{StaticResource SecoundaryBackground}"
                                            To="{StaticResource WindowBorder}"
                                            Duration="0:0:0.3" />

                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource UnactiveBackgroundBrush}" />
                            <Setter Property="Background" Value="{StaticResource SecoundaryBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <Style x:Key="TitleStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource NeutralForegroundBrush}" />
        <Setter Property="FontFamily" Value="\Resources\Fonts\saira\Saira-Regular.ttf#Saira Regular" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="Margin" Value="15,0,0,0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="20" />

    </Style>

    <Style x:Key="SliderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Content" Value="OFF" />
        <Setter Property="Foreground" Value="{StaticResource PrimaryBackgroundBrush}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="BorderBrush" Value="{StaticResource SecoundaryBackgroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        VerticalAlignment="Stretch"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{StaticResource PrimaryBackgroundBrush}"
                        BorderThickness="4"
                        CornerRadius="8">
                        <Border
                            x:Name="slider"
                            Width="{TemplateBinding Height}"
                            Margin="2"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Stretch"
                            Background="{TemplateBinding BorderBrush}"
                            CornerRadius="5">
                            <Border.RenderTransform>
                                <TranslateTransform X="0" Y="0" />
                            </Border.RenderTransform>
                            <ContentPresenter
                                x:Name="switchLabel"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="LimeGreen" />
                            <Setter Property="Content" Value="ON" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="slider"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                            From="0"
                                            To="28"
                                            Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>

                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)"
                                            From="Gray"
                                            To="{StaticResource AcceptGreen}"
                                            Duration="0:0:0.15" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="slider"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                            From="28"
                                            To="0"
                                            Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(ToggleButton.Background).(SolidColorBrush.Color)"
                                            From="{StaticResource AcceptGreen}"
                                            To="Gray"
                                            Duration="0:0:0.15" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="slider" Property="HorizontalAlignment" Value="Left" />
                            <Setter Property="Background" Value="{StaticResource PrimaryBackgroundBrush}" />
                            <Setter Property="Foreground" Value="Gray" />
                            <Setter Property="Content" Value="OFF" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="slider" Property="HorizontalAlignment" Value="Left" />
                            <Setter Property="Background" Value="Black" />
                            <Setter Property="BorderBrush" Value="White" />
                            <Setter Property="Foreground" Value="Black" />
                            <Setter Property="Content" Value="OFF" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            From="1"
                                            To="0.85"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            From="0.85"
                                            To="1"
                                            Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="CheckBoxStyles" TargetType="CheckBox">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{StaticResource NeutralForegroundUnactiveBrush}" />
        <Setter Property="Foreground" Value="{StaticResource NeutralForegroundUnactiveBrush}" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Margin" Value="0,0,40,15" />
        <Setter Property="Height" Value="25" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Border>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <TextBlock
                                Margin="5,0,5,5"
                                VerticalAlignment="Center"
                                FontSize="14"
                                Foreground="{TemplateBinding Foreground}"
                                Text="{TemplateBinding Content}"
                                TextAlignment="Right" />

                            <Border
                                Name="outlineOK"
                                Grid.Column="10"
                                Width="15"
                                Height="15"
                                Margin="0,0,5,0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding Foreground}"
                                BorderThickness="2"
                                SnapsToDevicePixels="True" />

                            <Path
                                Name="inlineOK"
                                Grid.Column="1"
                                Width="16"
                                Height="16"
                                Margin="-2,0,0,8"
                                Panel.ZIndex="10"
                                Data="{StaticResource OkIcon}"
                                Fill="{StaticResource AcceptGreenBrush}"
                                Opacity="0"
                                Stretch="Fill">
                                <Path.RenderTransform>
                                    <ScaleTransform ScaleX="0.5" ScaleY="0.5" />
                                </Path.RenderTransform>
                            </Path>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(CheckBox.Foreground).(SolidColorBrush.Color)"
                                            From="{StaticResource NeutralForegroundUnactive}"
                                            To="{StaticResource NeutralForeground}"
                                            Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(CheckBox.Foreground).(SolidColorBrush.Color)"
                                            From="{StaticResource NeutralForeground}"
                                            To="{StaticResource NeutralForegroundUnactive}"
                                            Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="inlineOK"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            From="0"
                                            To="1"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="inlineOK"
                                            Storyboard.TargetProperty="RenderTransform.ScaleX"
                                            From="0"
                                            To="1"
                                            Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <BackEase />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation
                                            Storyboard.TargetName="inlineOK"
                                            Storyboard.TargetProperty="RenderTransform.ScaleY"
                                            From="0"
                                            To="1"
                                            Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <BackEase />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="inlineOK"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            From="1"
                                            To="0"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="inlineOK"
                                            Storyboard.TargetProperty="RenderTransform.ScaleX"
                                            From="1"
                                            To="0"
                                            Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <BackEase />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation
                                            Storyboard.TargetName="inlineOK"
                                            Storyboard.TargetProperty="RenderTransform.ScaleY"
                                            From="1"
                                            To="0"
                                            Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <BackEase />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RoundedCheckBoxStyles" TargetType="CheckBox">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{StaticResource NeutralForegroundUnactiveBrush}" />
        <Setter Property="Foreground" Value="{StaticResource NeutralForegroundUnactiveBrush}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="10,0,5,0" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Border>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <Border
                                Name="outlineOK"
                                Grid.Column="10"
                                Width="18"
                                Height="18"
                                Margin="0,0,0,0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding Foreground}"
                                BorderThickness="3"
                                CornerRadius="9"
                                SnapsToDevicePixels="True" />

                            <Rectangle
                                Name="inlineOK"
                                Grid.Column="1"
                                Width="10"
                                Height="10"
                                Margin="0,0,0,0"
                                Panel.ZIndex="10"
                                Fill="{StaticResource AcceptGreenBrush}"
                                Opacity="0"
                                RadiusX="5"
                                RadiusY="5"
                                Stretch="Fill">
                                <Rectangle.RenderTransform>
                                    <ScaleTransform ScaleX="0.5" ScaleY="0.5" />
                                </Rectangle.RenderTransform>
                            </Rectangle>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(CheckBox.Foreground).(SolidColorBrush.Color)"
                                            From="{StaticResource NeutralForegroundUnactive}"
                                            To="{StaticResource NeutralForeground}"
                                            Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(CheckBox.Foreground).(SolidColorBrush.Color)"
                                            From="{StaticResource NeutralForeground}"
                                            To="{StaticResource NeutralForegroundUnactive}"
                                            Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="inlineOK"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            From="0"
                                            To="1"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="inlineOK"
                                            Storyboard.TargetProperty="RenderTransform.ScaleX"
                                            From="0"
                                            To="1"
                                            Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <BackEase />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation
                                            Storyboard.TargetName="inlineOK"
                                            Storyboard.TargetProperty="RenderTransform.ScaleY"
                                            From="0"
                                            To="1"
                                            Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <BackEase />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="inlineOK"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            From="1"
                                            To="0"
                                            Duration="0:0:0.2" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="inlineOK"
                                            Storyboard.TargetProperty="RenderTransform.ScaleX"
                                            From="1"
                                            To="0"
                                            Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <BackEase />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation
                                            Storyboard.TargetName="inlineOK"
                                            Storyboard.TargetProperty="RenderTransform.ScaleY"
                                            From="1"
                                            To="0"
                                            Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <BackEase />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="TodoContentStyle"
        BasedOn="{StaticResource BaseTextBlockStyle}"
        TargetType="TextBlock">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="{StaticResource NeutralForegroundBrush}" />
        <Setter Property="Margin" Value="5,15,5,10" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, ElementName=IsDoneCheckBox}" Value="true">
                <Setter Property="TextBlock.TextDecorations" Value="Strikethrough" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="InputTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource SecoundaryBackgroundBrush}" />
        <Setter Property="Padding" Value="15,15,78,15" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="MaxHeight" Value="110" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="TextWrapping" Value="WrapWithOverflow" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontFamily" Value="\Resources\Fonts\saira\Saira-Regular.ttf#Saira Regular" />
        <Setter Property="AllowDrop" Value="True" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Cursor" Value="IBeam" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Foreground" Value="{DynamicResource NeutralForegroundBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border
                        x:Name="txtBorder"
                        MaxWidth="{TemplateBinding MaxWidth}"
                        MaxHeight="{TemplateBinding MaxHeight}"
                        Background="{TemplateBinding Background}"
                        CornerRadius="10"
                        SnapsToDevicePixels="True">
                        <Grid>
                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                Margin="0,-1"
                                Focusable="False"
                                HorizontalScrollBarVisibility="Hidden"
                                VerticalScrollBarVisibility="Hidden" />
                            <Label
                                x:Name="WaterMarkerLabel"
                                Margin="0,0,0,0"
                                Padding="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Tag}"
                                FontWeight="{TemplateBinding FontWeight}"
                                Foreground="{StaticResource NeutralForegroundUnactiveBrush}"
                                Visibility="Collapsed" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value="" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="WaterMarkerLabel" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource NeutralForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource NeutralForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource NeutralForegroundUnactiveBrush}" />

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--#region Scroll Bar-->
    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border
                        x:Name="Border"
                        Margin="1"
                        BorderThickness="0"
                        CornerRadius="0">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="{StaticResource PrimaryBackground}" />
                        </Border.BorderBrush>
                        <Border.Background>
                            <SolidColorBrush Color="{StaticResource PrimaryBackground}" />
                        </Border.Background>
                        <Path
                            x:Name="Arrow"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}">
                            <Path.Fill>
                                <SolidColorBrush Color="{DynamicResource PrimaryBackground}" />
                            </Path.Fill>
                        </Path>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                            From="{StaticResource PrimaryBackground}"
                                            To="{StaticResource PrimaryBackground}"
                                            Duration="0:0:0.125">
                                            <ColorAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseInOut" Exponent="2" />
                                            </ColorAnimation.EasingFunction>
                                        </ColorAnimation>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation
                                            AutoReverse="False"
                                            Storyboard.TargetName="Arrow"
                                            Storyboard.TargetProperty="Fill.Color"
                                            From="{StaticResource PrimaryBackground}"
                                            To="{StaticResource PrimaryBackground}"
                                            Duration="0:0:0.150" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimation
                                            AutoReverse="False"
                                            Storyboard.TargetName="Arrow"
                                            Storyboard.TargetProperty="Fill.Color"
                                            From="{StaticResource PrimaryBackground}"
                                            To="{StaticResource PrimaryBackground}"
                                            Duration="0:0:0.150" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  przyciski pomiędzy suwakiem  -->
    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  PIONOWY SUWAK  -->
    <Style x:Key="VerticalScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{DynamicResource DodgeBlueBrush}">
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="Opacity" Value="0.9" />
                                <Setter Property="Width" Value="10" />
                                <Setter Property="CornerRadius" Value="5" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Opacity" Value="1" />
                                        <Setter Property="Width" Value="20" />
                                        <Setter Property="CornerRadius" Value="11" />
                                    </Trigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Thumb}, Path=IsDragging}" Value="True">
                                        <Setter Property="Opacity" Value="0.5" />
                                        <Setter Property="Width" Value="20" />
                                        <Setter Property="CornerRadius" Value="11" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  PIONOWY SCROLL  -->
    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="1" />
                <RowDefinition Height="0.00001*" />
                <RowDefinition MaxHeight="1" />
            </Grid.RowDefinitions>
            <Border
                Grid.RowSpan="3"
                Width="6"
                Background="{DynamicResource DodgeBlueBrush}"
                CornerRadius="6"
                Opacity="0.2" />
            <!--
                Gdybyś potrzebował przycisków ze strzałkami przy scrolu
                to zwiększ rozmiar repeat buttona i max height dla jego wierszy
            -->
            <RepeatButton
                Grid.Row="0"
                Height="1"
                Command="ScrollBar.LineUpCommand"
                Content="M 0 4 L 8 4 L 4 0 Z"
                Style="{StaticResource ScrollBarLineButton}" />
            <Track
                x:Name="PART_Track"
                Grid.Row="1"
                IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ScrollBarPageButton}" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Margin="0,0,0,0" Style="{StaticResource VerticalScrollBarThumb}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ScrollBarPageButton}" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton
                Grid.Row="2"
                Height="1"
                Command="ScrollBar.LineDownCommand"
                Content="M 0 0 L 4 4 L 8 0 Z"
                Style="{StaticResource ScrollBarLineButton}" />
        </Grid>
    </ControlTemplate>

    <!--  POZIOMY SUWAK  -->
    <Style x:Key="HorisontalScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{DynamicResource DodgeBlueBrush}">
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="Opacity" Value="0.9" />
                                <Setter Property="Height" Value="10" />
                                <Setter Property="CornerRadius" Value="5" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Opacity" Value="1" />
                                        <Setter Property="Height" Value="20" />
                                        <Setter Property="CornerRadius" Value="11" />
                                    </Trigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Thumb}, Path=IsDragging}" Value="True">
                                        <Setter Property="Opacity" Value="0.5" />
                                        <Setter Property="Height" Value="20" />
                                        <Setter Property="CornerRadius" Value="11" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  POZIOMY Scrol  -->
    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="1" />
                <ColumnDefinition Width="0.00001*" />
                <ColumnDefinition MaxWidth="1" />
            </Grid.ColumnDefinitions>
            <Border
                Grid.ColumnSpan="3"
                Height="6"
                Background="{DynamicResource DodgeBlueBrush}"
                CornerRadius="6"
                Opacity="0.2" />
            <RepeatButton
                Grid.Column="0"
                Width="18"
                Command="ScrollBar.LineLeftCommand"
                Content="M 4 0 L 4 8 L 0 4 Z"
                Style="{StaticResource ScrollBarLineButton}" />
            <Track
                x:Name="PART_Track"
                Grid.Column="1"
                IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageLeftCommand" Style="{StaticResource ScrollBarPageButton}" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Margin="0,1,0,1" Style="{StaticResource HorisontalScrollBarThumb}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageRightCommand" Style="{StaticResource ScrollBarPageButton}" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton
                Grid.Column="2"
                Width="1"
                Command="ScrollBar.LineRightCommand"
                Content="M 0 0 L 4 4 L 0 8 Z"
                Style="{StaticResource ScrollBarLineButton}" />
        </Grid>
    </ControlTemplate>

    <!--  OGÓLNY STYL SCROLLBARA  -->
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Height" Value="25" />
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="25" />
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Margin" Value="0,0,0,0" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->
</ResourceDictionary>